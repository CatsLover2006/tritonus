# compilation and packing for the tritonus library
#

SHELL = /bin/sh

prefix=@prefix@


JAVADIR=$(prefix)
JAVAEXTPATH=$(JAVADIR)/jre/lib/ext

JAVAC=javac
#JAVAC=guavac
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
LN_S = @LN_S@
RM_F = @RM_F@
MKDIR_P = @MKDIR_P@

DESTDIR = @BUILD_DIR@
DISTDIR = @DIST_DIR@
JL_SRC = @JL_DIR@

%.class: %.java
	export CLASSPATH=$(DESTDIR):$(JL_SRC):src:$$CLASSPATH; $(JAVAC) -d $(DESTDIR) $<


SRCDIR_PUB = src/javax/sound
SRCDIR_PRIV = src/org/tritonus
SRCDIR_JL = $(JL_SRC)/javazoom/jl/decoder
SRCDIR_JESD = src/com/jcraft/jesd

OBJDIR_PUB = $(DESTDIR)/javax/sound
OBJDIR_PRIV = $(DESTDIR)/org/tritonus
OBJDIR_JL = $(DESTDIR)/javazoom/jl/decoder
OBJDIR_JESD = $(DESTDIR)/com/jcraft/jesd

PACKAGING_ABSOLUTE_DIR=@SRC_ABSOLUTE_PATH@/src/packaging

PACKSRCDIR_CORE = javax/sound org/tritonus/core
PACKSRCDIR_SHARE = org/tritonus/share
PACKSRCDIR_REMAINING = org/tritonus/lowlevel org/tritonus/midi org/tritonus/sampled
PACKSRCDIR_MP3 = org/tritonus/sampled/convert/javalayer/Mpeg* org/tritonus/sampled/file/Mpeg*
PACKSRCDIR_GSM = org/tritonus/lowlevel/gsm org/tritonus/sampled/file/gsm org/tritonus/sampled/convert/gsm

PACKSRCDIR_JL = javazoom

LIBDEST_CORE=tritonus_core.jar
LIBDEST_SHARE=tritonus_share.jar
LIBDEST_REMAINING=tritonus_remaining.jar
LIBDEST_MP3=tritonus_mp3.jar
LIBDEST_GSM=tritonus_gsm.jar
LIBDEST_JL=@JL_LIB@

PLUGINS=$(LIBDEST_MP3) $(LIBDEST_GSM) $(LIBDEST_SHARE) $(LIBDEST_JL)

LIBS=$(LIBDEST_CORE) $(LIBDEST_SHARE) $(LIBDEST_REMAINING) $(LIBDEST_MP3) $(LIBDEST_JL) $(LIBDEST_GSM)

LIBDEST_ABSOLUTE_PREFIX=@SRC_ABSOLUTE_PATH@/$(DISTDIR)

vpath %.java $(SRCDIR_PUB)/midi
vpath %.java $(SRCDIR_PUB)/midi/spi
vpath %.java $(SRCDIR_PUB)/sampled
vpath %.java $(SRCDIR_PUB)/sampled/spi
vpath %.java $(SRCDIR_PRIV)
vpath %.java $(SRCDIR_PRIV)/core
vpath %.java $(SRCDIR_PRIV)/lowlevel/alsa
vpath %.java $(SRCDIR_PRIV)/lowlevel/esd
vpath %.java $(SRCDIR_PRIV)/lowlevel/gsm
vpath %.java $(SRCDIR_PRIV)/lowlevel/saint
vpath %.java $(SRCDIR_PRIV)/lowlevel/lame
vpath %.java $(SRCDIR_PRIV)/share
vpath %.java $(SRCDIR_PRIV)/share/sampled
vpath %.java $(SRCDIR_PRIV)/share/sampled/convert
vpath %.java $(SRCDIR_PRIV)/share/sampled/file
vpath %.java $(SRCDIR_PRIV)/share/sampled/mixer
vpath %.java $(SRCDIR_PRIV)/share/midi
vpath %.java $(SRCDIR_PRIV)/sampled/convert
vpath %.java $(SRCDIR_PRIV)/sampled/convert/gsm
vpath %.java $(SRCDIR_PRIV)/sampled/file
vpath %.java $(SRCDIR_PRIV)/sampled/file/gsm
vpath %.java $(SRCDIR_PRIV)/sampled/mixer
vpath %.java $(SRCDIR_PRIV)/sampled/mixer/alsa
vpath %.java $(SRCDIR_PRIV)/sampled/mixer/esd
vpath %.java $(SRCDIR_PRIV)/sampled/mixer/jesd
vpath %.java $(SRCDIR_PRIV)/midi/device
vpath %.java $(SRCDIR_PRIV)/midi/device/alsa
vpath %.java $(SRCDIR_PRIV)/midi/device/midishare
vpath %.java $(SRCDIR_PRIV)/midi/device/saint
vpath %.java $(SRCDIR_PRIV)/midi/file
vpath %.java $(SRCDIR_JL)
vpath %.java $(SRCDIR_JESD)

vpath %.class $(OBJDIR_PUB)/midi
vpath %.class $(OBJDIR_PUB)/midi/spi
vpath %.class $(OBJDIR_PUB)/sampled
vpath %.class $(OBJDIR_PUB)/sampled/spi
vpath %.class $(OBJDIR_PRIV)
vpath %.class $(OBJDIR_PRIV)/core
vpath %.class $(OBJDIR_PRIV)/lowlevel/alsa
vpath %.class $(OBJDIR_PRIV)/lowlevel/esd
vpath %.class $(OBJDIR_PRIV)/lowlevel/gsm
vpath %.class $(OBJDIR_PRIV)/lowlevel/saint
vpath %.class $(OBJDIR_PRIV)/lowlevel/lame
vpath %.class $(OBJDIR_PRIV)/share
vpath %.class $(OBJDIR_PRIV)/share/sampled
vpath %.class $(OBJDIR_PRIV)/share/sampled/convert
vpath %.class $(OBJDIR_PRIV)/share/sampled/file
vpath %.class $(OBJDIR_PRIV)/share/sampled/mixer
vpath %.class $(OBJDIR_PRIV)/share/midi
vpath %.class $(OBJDIR_PRIV)/sampled/convert
vpath %.class $(OBJDIR_PRIV)/sampled/convert/gsm
vpath %.class $(OBJDIR_PRIV)/sampled/file
vpath %.class $(OBJDIR_PRIV)/sampled/file/gsm
vpath %.class $(OBJDIR_PRIV)/sampled/mixer
vpath %.class $(OBJDIR_PRIV)/sampled/mixer/alsa
vpath %.class $(OBJDIR_PRIV)/sampled/mixer/esd
vpath %.class $(OBJDIR_PRIV)/sampled/mixer/jesd
vpath %.class $(OBJDIR_PRIV)/midi/device
vpath %.class $(OBJDIR_PRIV)/midi/device/alsa
vpath %.class $(OBJDIR_PRIV)/midi/device/midishare
vpath %.class $(OBJDIR_PRIV)/midi/device/saint
vpath %.class $(OBJDIR_PRIV)/midi/file
vpath %.class $(OBJDIR_JL)
vpath %.class $(OBJDIR_JESD)

SRCTMP:=$(wildcard \
	$(SRCDIR_PUB)/midi/*.java \
	$(SRCDIR_PUB)/midi/spi/*.java \
	$(SRCDIR_PUB)/sampled/*.java \
	$(SRCDIR_PUB)/sampled/spi/*.java \
	$(SRCDIR_PRIV)/*.java \
	$(SRCDIR_PRIV)/core/*.java \
	$(SRCDIR_PRIV)/share/*.java \
	$(SRCDIR_PRIV)/share/midi/*.java \
	$(SRCDIR_PRIV)/share/sampled/*.java \
	$(SRCDIR_PRIV)/share/sampled/convert/*.java \
	$(SRCDIR_PRIV)/share/sampled/file/*.java \
	$(SRCDIR_PRIV)/share/sampled/mixer/*.java \
	$(SRCDIR_PRIV)/lowlevel/alsa/*.java \
	$(SRCDIR_PRIV)/lowlevel/esd/*.java \
	$(SRCDIR_PRIV)/lowlevel/gsm/*.java \
	$(SRCDIR_PRIV)/lowlevel/saint/*.java \
	$(SRCDIR_PRIV)/lowlevel/lame/*.java \
	$(SRCDIR_PRIV)/sampled/convert/*.java \
	$(SRCDIR_PRIV)/sampled/convert/gsm/*.java \
	$(SRCDIR_PRIV)/sampled/file/*.java \
	$(SRCDIR_PRIV)/sampled/file/gsm/*.java \
	$(SRCDIR_PRIV)/sampled/mixer/alsa/*.java \
	$(SRCDIR_PRIV)/sampled/mixer/jesd/*.java \
	$(SRCDIR_PRIV)/sampled/mixer/esd/*.java \
	$(SRCDIR_PRIV)/midi/device/alsa/*.java \
	$(SRCDIR_PRIV)/midi/file/*.java \
	$(SRCDIR_JL)/*.java \
	$(SRCDIR_JESD)/*.java \
	)

#	$(SRCDIR_PRIV)/midi/device/saint/*.java \
#	$(SRCDIR_PRIV)/midi/device/midishare/*.java \ needs e.g. class grame.midishare.MidiException

SRC:=$(notdir $(SRCTMP))
OBJ:=$(SRC:.java=.class)

srcdir=.
DISTFILES=ConvertJDK117 INSTALL LGPL Makefile.in NEWS README README.midi README.mp3 config.guess config.sub configure.in configure  doc src test util #new
SUBDIRS=@SUBDIRS@
CONVERTTARGETS = @CONVERTTARGETS@


#----------------- rules -------------------

.PHONY: all
all: check_javalayer builddir $(CONVERTTARGETS) $(LIBS) @JAR_INDEX@
	@for d in $(SUBDIRS); do $(MAKE) -C $$d; done
	@rm -rf $(DESTDIR)/META-INF

.PHONY: compileinitial
compileinitial: $(CONVERTTARGETS) compileinitialimpl

.PHONY: compileinitialimpl
compileinitialimpl: check_javalayer builddir $(SRC)
	export CLASSPATH=$(DESTDIR):$$CLASSPATH; $(JAVAC) -d $(DESTDIR) $(SRCTMP)
	$(MAKE) all

.PHONY: check_javalayer
check_javalayer:
	@if test ".@JL_DIR@" = "." ; then \
	echo "*********************************************************" ; \
	echo "** You haven't downloaded the javalayer MP3 decoder.   **" ; \
	echo "** MP3 decoding will not be possible.                  **" ; \
	echo "** Download the mp3 decoder with the following         **" ; \
	echo "** commands:                                           **" ; \
	echo "** SERVER=anonymous@cvs.javalayer.sourceforge.net      **" ; \
	echo "** SERVERPATH=/cvsroot/javalayer                       **" ; \
	echo "** cvs -d:pserver:\$$SERVER:\$$SERVERPATH login            **" ; \
	echo "** (press ENTER key for password)                      **" ; \
	echo "** cvs -z3 -d:pserver:\$$SERVER:\$$SERVERPATH co javalayer **" ; \
	echo "*********************************************************" ; \
	exit 1 ; \
	fi

.PHONY: convert
convert:
	@if [ ! -f .converted ]; then ./ConvertJDK117; echo "" > .converted; fi

.PHONY: builddir
builddir:
	@$(MKDIR_P) $(DESTDIR)

.PHONY: distdir
distdir:
	@$(MKDIR_P) $(DISTDIR)

.PHONY: metainfdir
metainfdir:
	@rm -rf $(DESTDIR)/META-INF
	@$(MKDIR_P) $(DESTDIR)/META-INF
	@$(MKDIR_P) $(DESTDIR)/META-INF/services

.PHONY: $(LIBDEST_CORE)
$(LIBDEST_CORE): $(OBJ) distdir
	@echo Creating $(LIBDEST_CORE)
	@cd $(DESTDIR) ; jar cmf $(PACKAGING_ABSOLUTE_DIR)/tritonus_core/manifest.mf \
		$(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_CORE) $(PACKSRCDIR_CORE)

.PHONY: $(LIBDEST_SHARE)
$(LIBDEST_SHARE):	$(OBJ) distdir
	@echo Creating $(LIBDEST_SHARE)
	@cd $(DESTDIR) ; jar cf $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_SHARE) $(PACKSRCDIR_SHARE)

.PHONY: $(LIBDEST_REMAINING)
$(LIBDEST_REMAINING):	$(OBJ) distdir metainfdir
	@echo Creating $(LIBDEST_REMAINING)
	@$(RM_F) $(DESTDIR)/META-INF/services/javax*
	@cp src/packaging/tritonus_core/META-INF/services/javax* $(DESTDIR)/META-INF/services/
	@cd $(DESTDIR) ; jar cf $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_REMAINING) \
		$(PACKSRCDIR_REMAINING) META-INF/services/

.PHONY: $(LIBDEST_MP3)
$(LIBDEST_MP3):	$(OBJ) distdir metainfdir
	@echo Creating $(LIBDEST_MP3)
	@$(RM_F) $(DESTDIR)/META-INF/services/javax*
	@cp src/packaging/tritonus_mp3/META-INF/services/javax* $(DESTDIR)/META-INF/services/
	@cd $(DESTDIR) ; jar cmf $(PACKAGING_ABSOLUTE_DIR)/tritonus_mp3/manifest.mf \
		$(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_MP3) $(PACKSRCDIR_MP3) META-INF/services/

.PHONY: $(LIBDEST_GSM)
$(LIBDEST_GSM):	$(OBJ) distdir metainfdir
	@echo Creating $(LIBDEST_GSM)
	@$(RM_F) $(DESTDIR)/META-INF/services/javax*
	@cp src/packaging/tritonus_gsm/META-INF/services/javax* $(DESTDIR)/META-INF/services/
	@cd $(DESTDIR) ; jar cmf $(PACKAGING_ABSOLUTE_DIR)/tritonus_gsm/manifest.mf \
		$(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_GSM) $(PACKSRCDIR_GSM) META-INF/services/

.PHONY: javalayer.jar
javalayer.jar:	$(OBJ) distdir
	@echo Creating $(LIBDEST_JL)
	@cp $(SRCDIR_JL)/*.ser $(DESTDIR)/javazoom/jl/decoder/
	@cd $(DESTDIR) ; jar cf $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_JL) $(PACKSRCDIR_JL)

.PHONY: jar_index
jar_index: $(LIBS)
	@echo Creating indexes for $(LIBDEST_CORE), $(LIBDEST_MP3), and $(LIBDEST_GSM)
	@cd $(DISTDIR) ; jar -i $(LIBDEST_CORE)
	@cd $(DISTDIR) ; jar -i $(LIBDEST_MP3)
	@cd $(DISTDIR) ; jar -i $(LIBDEST_GSM)

.PHONY: doc
doc:	all 
	$(MAKE) -C doc

.PHONY: test
test:	all 
	$(MAKE) -C all

.PHONY: install
install: all
	$(INSTALL_DATA) $(DISTDIR)/$(LIBDEST_CORE) $(JAVAEXTPATH)
	$(INSTALL_DATA) $(DISTDIR)/$(LIBDEST_SHARE) $(JAVAEXTPATH)
	$(INSTALL_DATA) $(DISTDIR)/$(LIBDEST_REMAINING) $(JAVAEXTPATH)
	$(INSTALL_DATA) $(DISTDIR)/$(LIBDEST_JL) $(JAVAEXTPATH)
	@for d in $(SUBDIRS); do $(MAKE) -C $$d install; done

.PHONY: install-link
install-link: all
	@echo "Creating link for $(DISTDIR)/$(LIBDEST_CORE) in $(JAVAEXTPATH)"
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_CORE)
	@(cd  $(JAVAEXTPATH) && $(LN_S) $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_CORE) $(LIBDEST_CORE))
	@echo "Creating link for $(DISTDIR)/$(LIBDEST_SHARE) in $(JAVAEXTPATH)"
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_SHARE)
	@(cd  $(JAVAEXTPATH) && $(LN_S) $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_SHARE) $(LIBDEST_SHARE))
	@echo "Creating link for $(DISTDIR)/$(LIBDEST_REMAINING) in $(JAVAEXTPATH)"
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_REMAINING)
	@(cd  $(JAVAEXTPATH) && $(LN_S) $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_REMAINING) $(LIBDEST_REMAINING))
	@echo "Creating link for $(DISTDIR)/$(LIBDEST_JL) in $(JAVAEXTPATH)"
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_JL)
	@(cd  $(JAVAEXTPATH) && $(LN_S) $(LIBDEST_ABSOLUTE_PREFIX)/$(LIBDEST_JL) $(LIBDEST_JL))
	@for d in $(SUBDIRS); do $(MAKE) -C $$d install-link; done

.PHONY: uninstall
uninstall:
	@echo "Removing tritonus jars in $(JAVAEXTPATH)"
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_CORE)
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_SHARE)
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_REMAINING)
	@$(RM_F) $(JAVAEXTPATH)/$(LIBDEST_JL)
	@for d in $(SUBDIRS); do $(MAKE) -C $$d uninstall; done

.PHONY: uninstall-link
uninstall-link: uninstall

.PHONY: clean
clean:
	cd $(DISTDIR) ; $(RM_F) $(LIBS)
	rm -rf $(DESTDIR)/org $(DESTDIR)/javax $(DESTDIR)/javazoom $(DESTDIR)/com $(DESTDIR)/META-INF
	find . -name '*~' -exec rm '{}' ';'
	find . -name '*.class' -exec rm '{}' ';'
	find . -name '.directory' -exec rm '{}' ';'
	@for d in $(SUBDIRS); do $(MAKE) -C $$d clean; done

.PHONY: veryclean
veryclean: clean
	rm -rf TAGS

.PHONY:tags
tags: TAGS

TAGS: $(SRCTMP)
	etags $(SRCTMP)


dist:
	echo tritonus-`cat version` >.fname
	-rm -rf `cat .fname`
	mkdir `cat .fname`
	dst=`cat .fname`; for f in $(DISTFILES); do \
	ln $(srcdir)/$$f $$dst/$$f || { echo copying $$f; \
	cp -pr $(srcdir)/$$f $$dst/$$f; } \
	done
	tar czhf `cat .fname`.tar.gz `cat .fname`
	-rm -rf `cat .fname` .fname

devdist:
	echo tritonus-`date +%Y-%m-%d` >.fname
	-rm -rf `cat .fname`
	mkdir `cat .fname`
	dst=`cat .fname`; for f in $(DISTFILES); do \
	ln $(srcdir)/$$f $$dst/$$f || { echo copying $$f; \
	cp -pr $(srcdir)/$$f $$dst/$$f; } \
	done
	tar czhf `cat .fname`.tar.gz `cat .fname`
	-rm -rf `cat .fname` .fname

devdist-upload: devdist
	echo tritonus-`date +%Y-%m-%d.tar.gz` >.fname
	scp `cat .fname` tritonus.sourceforge.net:/home/groups/ftp/pub/tritonus/
	-rm -f .fname

plugins-upload:	$(PLUGINS)
	cd $(DISTDIR) ; scp $(PLUGINS) tritonus.sourceforge.net:/home/groups/ftp/pub/tritonus/
