Installing instructions for Tritonus, version 0.3.1

What you need
=============

- jdk 1.4.x, 1.3.x or jdk1.2.x for Linux. Testing was done with the
Blackdown jdk1.3.0-FCS.
(http://www.blackdown.org/). Other versions may work.
If you only want to build pure-java (not Linux specific)components, you
can use a jdk with the above versions on any platform.
Tritonus does not work with jdk1.1.X.
There are no experiences with gcj and kaffe. Reports are welcome.

- Optional: jikes (recommanded, testing was done with version 1.16)

- Either: the Enlightened Sound Daemon (esd or EsounD). On Debian
systems, install the packages esound-common, esound, libesd0 and
libesd0-dev. On Suse systems, install the package esound. If esd is
not part of your Linux distribution, look at www.gnome.org. Make sure
you have not only the daemon and the shared library, but also the header
files for libesd.

  NOTE: this is kept more or less as a compatibility option. Esd is
  considered a badly designed program. Using ALSA is highly
  recommended.

- Or: ALSA 0.9.0rc2 or later or the corresponding cvs state. Get it
from http://www.alsa-project.org/. It is recommended to use ALSA if
you want to get high-performance, low-latency operation, or reliable
full-duplex.

  STILL ANOTHER NOTE: currently, Tritonus' ALSA handling does not do
  software mixing. This means that for normal JS operation (multiple
  SourceDataLines/Clips) your soundcard has to support hardware
  mixing. Common chipsets that do this are emu10k1 (SB Life!) and
  Trident NX (e.g. Hoontech 4DWaveNX). Otherwise, you will get only
  one line at a time. In other words: if your soundcard does not do hw
  mixing, you need to choose the esd options to have multiple lines.


For MIDI:
- Either: ALSA (see above)

- Or: MidiShare. Get it from http://www.grame.fr/MidiShare/.

For the build process:
- make (Testing done with GNU make 3.79)
- ant (get it from http://jakarta.apache.org/ant/ if not present in your distribution)
- g++
- libtool (currently not needed)
- m4
- cpp

Installing steps
================

---------------------
Currently, the build process is a mess.
I'm currently building with these commands:

../tritonus> ant
../tritonus> make -C src/lib/alsa
../tritonus> make -C src/lib/...

Installation never worked really well. I did (by hand):
> cd /usr/local/java/j2sdk1.4.0/jre/lib/ext
> ln -s /home/matthias/java/tritonus/dist/tritonus_xxx.jar
...
> cd i386
> ln -s /home/matthias/java/tritonus/src/lib/alsa/libtritonusalsa.so
...
(Of course adapt the paths to your system.)

---------------------


1. Unpack the distribution. It should unpack into a directory
tritonus-<version>. cd into the top-level directory.

2. Issue 'configure' ('./configure' if you build as root) in the
top-level directory. If you are building from the cvs, you have to
create configure from configure.in by calling 'autoconf'.

THE OLD WAY

3. Issue 'make' or 'make compileinitial' (the second one is
faster). There are spurious compilation errors with some jdk1.1
versions. Just restart with 'make' (even if you originally said 'make
compileinitial') and they will go away. This may be necessary several
times.


THE NEW WAY

3. Issue 'ant'.

-- following needs to be updated --

4. Issue 'make install'. This will copy the files tritonus.jar,
javalayer.jar, libesdtritonus.so.1.0 and libtritonusalsa.so.1.0 into
the directory tree of the jdk, thereby installing it as an
extension. Note that this works only if you have a jdk/jre1.2 or
higher and java is accessible in the path. If you have jdk/jre1.1.x,
you have to set the CLASSPATH and LD_LIBRARY_PATH to include the above
files. The important files are:

- tritonus-x.y.z/tritonus.jar - this contains the java classes and
should be in your CLASSPATH

- tritonus-x.y.z/javalayer.jar - this contains the java classes for the mp3 decoder (seperated because of legal reasons). They should be in your CLASSPATH, too.

-  tritonus-x.y.z/src/lib/alsa/libtritonusalsa.so.1.0 (if you use the MIDI stuff)

-  tritonus-x.y.z/src/lib/esd/libtritonusesd.so.1.0

this contains the native 
code and should be in your LD_LIBRARY_PATH

MISCELLANEOUS

If you found bugs, have suggestions, want to contribute or whatever,
you can contact the authors of this library:
mailto:tritonus-devel@lists.sourceforge.net

Further information on Tritonus:
http://www.tritonus.org/

You may also have a look at the Tritonus developer page:
http://tritonus.sourceforge.net/developer.html

Have fun!!
