# compilation and packing of the native library for alsa
#

SHELL = /bin/sh

prefix=@prefix@
JAVADIR=$(prefix)
REL_JAVAEXTLIBPATH=@REL_JAVAEXTLIBPATH@
JAVAEXTLIBPATH=$(JAVADIR)/$(REL_JAVAEXTLIBPATH)
OSNAME=@OSNAME@
ARCHNAME=@ARCHNAME@
CC=@CC@
CPPFLAGS=-Wall -Werror -I$(JAVADIR)/include -I$(JAVADIR)/include/$(OSNAME) -fPIC -D_REENTRANT #-pedantic
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
LN_S=@LN_S@
RM_F=@RM_F@
MKDIR_P=@MKDIR_P@

OBJDIR=../../../@BUILD_DIR@
vpath %.class $(OBJDIR)/org/tritonus/lowlevel/alsa

LIBBASENAME=libtritonusalsa
LIBDEST=$(LIBBASENAME).so.1.0
LIBDEST_ABSOLUTE=@SRC_ABSOLUTE_PATH@/src/lib/alsa/$(LIBDEST)
#or LIBDEST_ABSOLUTE=$(CURDIR)/$(LIBDEST)

LIBS=-lasound

JAVAH = @JAVAH@


JNIOBJ=\
	org_tritonus_lowlevel_alsa_Alsa.o \
	org_tritonus_lowlevel_alsa_AlsaCtl.o \
	org_tritonus_lowlevel_alsa_AlsaMixer.o \
	org_tritonus_lowlevel_alsa_AlsaMixerElement.o \
	org_tritonus_lowlevel_alsa_AlsaPcm.o \
	org_tritonus_lowlevel_alsa_AlsaPcm_HWParams.o \
	org_tritonus_lowlevel_alsa_AlsaPcm_HWParams_FormatMask.o \
	org_tritonus_lowlevel_alsa_AlsaPcm_SWParams.o \
	org_tritonus_lowlevel_alsa_AlsaSeq.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_ClientInfo.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_Event.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_PortInfo.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_PortSubscribe.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_QueueInfo.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_QueueStatus.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_QueueTempo.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_QueueTimer.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_RemoveEvents.o \
	org_tritonus_lowlevel_alsa_AlsaSeq_SystemInfo.o

OBJ=\
	$(JNIOBJ) \
	common.o \
	init.o \
	HandleFieldHandler.o



JNIHEADERS:=$(JNIOBJ:.o=.h)

JNICLASSFILES=\
	Alsa.class \
	AlsaCtl.class \
	AlsaMixer.class \
	AlsaMixerElement.class \
	AlsaPcm.class \
	AlsaPcm$$HWParams.class \
	AlsaPcm$$HWParams$$FormatMask.class \
	AlsaPcm$$SWParams.class \
	AlsaSeq.class \
	AlsaSeq$$ClientInfo.class \
	AlsaSeq$$Event.class \
	AlsaSeq$$PortInfo.class \
	AlsaSeq$$PortInfo.class \
	AlsaSeq$$QueueInfo.class \
	AlsaSeq$$QueueStatus.class \
	AlsaSeq$$QueueTempo.class \
	AlsaSeq$$QueueTimer.class \
	AlsaSeq$$RemoveEvents.class \
	AlsaSeq$$SystemInfo.class


JNICLASSES=\
	org.tritonus.lowlevel.alsa.Alsa \
	org.tritonus.lowlevel.alsa.AlsaCtl \
	org.tritonus.lowlevel.alsa.AlsaMixer \
	org.tritonus.lowlevel.alsa.AlsaMixerElement \
	org.tritonus.lowlevel.alsa.AlsaPcm \
	org.tritonus.lowlevel.alsa.AlsaPcm\$$HWParams \
	org.tritonus.lowlevel.alsa.AlsaPcm\$$HWParams\$$FormatMask \
	org.tritonus.lowlevel.alsa.AlsaPcm\$$SWParams \
	org.tritonus.lowlevel.alsa.AlsaSeq \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$ClientInfo \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$Event \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$PortInfo \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$PortSubscribe \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$QueueInfo \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$QueueStatus \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$QueueTempo \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$QueueTimer \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$RemoveEvents \
	org.tritonus.lowlevel.alsa.AlsaSeq\$$SystemInfo

#----------------- rules -------------------

.PHONY: all
all: $(LIBDEST)

$(LIBDEST):	$(OBJ)
	$(CXX) -nostartfiles -shared -Wl,-soname,$(LIBBASENAME).so.1 -o $(LIBDEST) $(OBJ) -L/usr/lib $(LIBS)
	$(RM_F) $(LIBBASENAME).so.1
	$(LN_S) $(LIBBASENAME).so.1.0 $(LIBBASENAME).so.1
	$(RM_F) $(LIBBASENAME).so
	$(LN_S) $(LIBBASENAME).so.1 $(LIBBASENAME).so

$(OBJ): $(JNIHEADERS)

$(JNIHEADERS): $(JNICLASSFILES)
	$(RM_F) $(JNIHEADERS)
	$(JAVAH) -d . $(JNICLASSES)

.PHONY: install
install:
	@echo "Installing $(LIBBASENAME) in $(JAVAEXTLIBPATH)"
	@$(MKDIR_P) $(JAVAEXTLIBPATH)
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1.0
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so
	$(INSTALL_PROGRAM) $(LIBDEST) $(JAVAEXTLIBPATH)
	@(cd $(JAVAEXTLIBPATH) && $(LN_S) $(LIBBASENAME).so.1.0 $(LIBBASENAME).so.1)
	@(cd $(JAVAEXTLIBPATH) && $(LN_S) $(LIBBASENAME).so.1 $(LIBBASENAME).so)

.PHONY: install-link
install-link:
	@echo "Creating links for $(LIBBASENAME) in $(JAVAEXTLIBPATH)"
	@$(MKDIR_P) $(JAVAEXTLIBPATH)
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1.0
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so
	@(cd  $(JAVAEXTLIBPATH) && $(LN_S) $(LIBDEST_ABSOLUTE) $(LIBBASENAME).so.1.0)
	@(cd $(JAVAEXTLIBPATH) && $(LN_S) $(LIBBASENAME).so.1.0 $(LIBBASENAME).so.1)
	@(cd $(JAVAEXTLIBPATH) && $(LN_S) $(LIBBASENAME).so.1 $(LIBBASENAME).so)

.PHONY: uninstall
uninstall:
	@echo "Removing $(LIBBASENAME) from $(JAVAEXTLIBPATH)"
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1.0
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so.1
	@$(RM_F) $(JAVAEXTLIBPATH)/$(LIBBASENAME).so

.PHONY: uninstall-link
uninstall-link: uninstall


.PHONY: clean
clean:
	rm -rf $(LIBDEST) $(JNIHEADERS) *.o *~
